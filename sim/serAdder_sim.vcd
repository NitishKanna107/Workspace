$date
	Sat Aug  9 09:41:54 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module serAdder_tb $end
$var wire 1 ! S $end
$var reg 1 " A $end
$var reg 1 # B $end
$var reg 1 $ clk $end
$var reg 1 % load $end
$var reg 1 & rst $end
$scope module DUT $end
$var wire 1 " A $end
$var wire 1 # B $end
$var wire 1 $ clk $end
$var wire 1 % load $end
$var wire 1 & rst $end
$var wire 1 ' t2 $end
$var wire 1 ( t1 $end
$var wire 1 ) S1 $end
$var wire 1 ! S $end
$var wire 1 * C2 $end
$var wire 1 + C1 $end
$scope module FA1 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 * Cout $end
$var wire 1 ) sum $end
$var wire 1 + Cin $end
$upscope $end
$scope module FF1 $end
$var wire 1 * D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 + Q $end
$upscope $end
$scope module RA $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var wire 1 " sIn $end
$var wire 1 . t3 $end
$var wire 1 / t2 $end
$var wire 1 0 t1 $end
$var wire 1 ( sOut $end
$scope module D1 $end
$var wire 1 " D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 0 Q $end
$upscope $end
$scope module D2 $end
$var wire 1 0 D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 / Q $end
$upscope $end
$scope module D3 $end
$var wire 1 / D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 . Q $end
$upscope $end
$scope module D4 $end
$var wire 1 . D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 ( Q $end
$upscope $end
$upscope $end
$scope module RB $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var wire 1 # sIn $end
$var wire 1 1 t3 $end
$var wire 1 2 t2 $end
$var wire 1 3 t1 $end
$var wire 1 ' sOut $end
$scope module D1 $end
$var wire 1 # D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 3 Q $end
$upscope $end
$scope module D2 $end
$var wire 1 3 D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 2 Q $end
$upscope $end
$scope module D3 $end
$var wire 1 2 D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 1 Q $end
$upscope $end
$scope module D4 $end
$var wire 1 1 D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 ' Q $end
$upscope $end
$upscope $end
$scope module RC $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var wire 1 ) sIn $end
$var wire 1 4 t3 $end
$var wire 1 5 t2 $end
$var wire 1 6 t1 $end
$var wire 1 ! sOut $end
$scope module D1 $end
$var wire 1 ) D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 6 Q $end
$upscope $end
$scope module D2 $end
$var wire 1 6 D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 5 Q $end
$upscope $end
$scope module D3 $end
$var wire 1 5 D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 4 Q $end
$upscope $end
$scope module D4 $end
$var wire 1 4 D $end
$var wire 1 $ clk $end
$var wire 1 & rst $end
$var reg 1 ! Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
$end
#5
1&
1$
#10
0$
#15
13
1$
1#
#20
0$
#25
12
10
1$
1"
#30
0$
#35
00
1/
11
1$
0"
#40
0$
#45
1'
03
1.
0/
10
1$
0#
1"
#48
1)
1-
1%
#50
0$
#55
1*
0)
1,
1/
0.
1(
02
16
1$
#60
0$
#65
0)
0,
15
06
1+
01
0(
1.
1$
#70
0$
#75
1,
0-
1(
0'
05
14
1$
#80
0$
#85
1!
04
1$
#88
1)
0*
0,
0%
#90
0$
